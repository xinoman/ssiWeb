<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>ssiWeb</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<!-- 加载spring的配置文件 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 配置spring配置文件加载的位置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:config/applicationContext.xml,classpath:config/applicationContext-beans.xml</param-value>
	</context-param>
	
	<!-- 配置CharacterEncoding，设置字符集 ,其中encoding是表示设置request的编码，forceEncoding表示是否同时设置response的编码。-->
	<filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
      
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	<!-- Log4j日志配置 -->
	<context-param>
	    <param-name>log4jConfigLocation</param-name>
	    <param-value>classpath:config/log4j.xml</param-value>
	</context-param>
	
	<context-param>
	    <param-name>log4jRefreshInterval</param-name>
	    <param-value>6000</param-value>
	</context-param>
	 
	<listener>
	    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>


	<!-- 配置Struts2框架的核心调度器 -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>struts-default.xml,struts-plugin.xml,/config/struts.xml</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Restful配置 -->
	<servlet>
		<servlet-name>Jersey REST Service</servlet-name>
		<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
		<init-param>
	      <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
	      <param-value>com.sun.jersey.api.container.filter.PostReplaceFilter</param-value>
	    </init-param>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<param-value>com.its.service.rest;com.fasterxml.jackson.jaxrs.json;com.wordnik.swagger.jaxrs.json;com.wordnik.swagger.jaxrs.listing</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>Jersey REST Service</servlet-name>
		<url-pattern>/api/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
	   <servlet-name>DefaultJaxrsConfig</servlet-name>
		<servlet-class>com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>
		<init-param>
			<param-name>api.version</param-name>
			<param-value>1.0.0</param-value>
		</init-param>
		<init-param>
			<param-name>swagger.api.basepath</param-name>
			<param-value>/ssiWeb/api</param-value>
		</init-param>
		<init-param>
	      <param-name>swagger.filter</param-name>
	      <param-value>com.its.filter.ApiAuthorizationFilterImpl</param-value>
	    </init-param>	    
		<load-on-startup>2</load-on-startup>		
	</servlet>
</web-app>